---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  #creationTimestamp: null
  name: johnfoos.baiding.teach
spec:
  group: baiding.teach
  names:
    kind: JohnFoo
    listKind: JohnFooList
    plural: johnfoos
    singular: johnfoo
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: JohnFoo is the Schema for the johnfooes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JohnFooSpec defines the desired state of Foo
            properties:
              name:
                description: INSERT ADDITIONAL SPEC FIELDS -- desired state of cluster
                type: string
              replicas:
                format: int32
                type: integer
            required:
            - name
            - replicas
            type: object
          status:
            description: JohnFooStatus defines the observed state of JohnFoo. It should
              always be reconstructable from the state of the cluster and/or outside
              world.
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
